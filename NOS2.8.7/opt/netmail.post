#!/usr/bin/env node
//
// Update SYSPROC to run the NETMAIL job. The NETMAIL job initiates
// the network mail routing system.
//

const DtCyber   = require("../../automation/DtCyber");
const utilities = require("./utilities");

const dtc = new DtCyber();

dtc.connect()
.then(() => dtc.expect([ {re:/Operator> $/} ]))
.then(() => dtc.attachPrinter("LP5xx_C12_E5"))
.then(() => dtc.say("  Update SYSPROC to launch NETMAIL job ..."))
.then(() => dtc.dis([
  "GET,SYSPROC.",
  "SUI,1.",
  "REPLACE,SYSPROC."
]))
.then(() => utilities.getFile(dtc, "SYSPROC"))
.then(text => {
  const start = "* START NETMAIL\n";
  const end   = "* END NETMAIL\n";
  let si = text.indexOf(start);
  if (si >= 0) {
    let ei = text.indexOf(end);
    if (ei >= 0) {
      text = `${text.substring(0, si)}${text.substring(ei + end.length)}`;
    }
  }
  text += start
       +  "$GET,NETMAIL/UN=MAILER.\n"
       +  "$ROUTE,NETMAIL,DC=NO,OT=SYOT.\n"
       +  end;
  return dtc.putFile("SYSPROC/IA,CS=DIS", text, {
    username: "INSTALL",
    password: utilities.getPropertyValue(utilities.getCustomProperties(dtc),"PASSWORDS","INSTALL","INSTALL")
  });
})
.then(() => dtc.dis([
  "GET,SYSPROC.",
  "PURGE,SYSPROC.",
  "SUI,377777.",
  "REPLACE,SYSPROC."
], 1))
.then(() => dtc.say("    SYSEDIT DBMAN into system"))
.then(() => dtc.dsd([
  "[IDLE,IAF.",
  "#1000#[!"
]))
.then(() => dtc.dis([
  "ATTACH,P=PRODUCT.",
  `GTR,P,LGO.ABS/DBMAN`,
  "#2000#SYSEDIT,B=LGO."
], 1))
.then(() => dtc.sleep(30000))
.then(() => dtc.dsd("[IAF."))
.then(() => dtc.say("    Register address translations for principal users and services"))
.then(() => dtc.runJob(12, 4, "opt/netmail-register-addresses.job", utilities.getHostId(dtc)))
.then(() => {
  process.exit(0);
})
.catch(err => {
  console.log(err);
  process.exit(1);
});
