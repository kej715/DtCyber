#!/usr/bin/env node
//
// Create the CYBIS users and load the CYBIS development tools, PL's,
// and other supporting files.
//

const DtCyber   = require("../../automation/DtCyber");
const utilities = require("./utilities");

const dtc = new DtCyber();

let maxProgressLen = 0;

dtc.connect()
.then(() => dtc.expect([ {re:/Operator> $/} ]))
.then(() => dtc.attachPrinter("LP5xx_C12_E5"))
.then(() => dtc.say("Create CYBIS users ..."))
.then(() => dtc.dis([
  "GET,CYBUSRS.",
  "MODVAL,FA,I=CYBUSRS,OP=U.",
  "PURGE,CYBUSRS/NA."
], "CYBMODV", 1))
.then(() => dtc.say("Get CYBIS development tools and PL's archive ..."))
.then(() => dtc.wget("https://www.dropbox.com/s/uz78wfg0cpd3lxd/cybisdv4nos287.tap?dl=1", "opt/tapes", (byteCount, contentLength) => {
  maxProgressLen = utilities.reportProgress(byteCount, contentLength, maxProgressLen);
}))
.then(() => utilities.clearProgress(maxProgressLen))
.then(() => dtc.say("Get CYBIS development tools update tape ..."))
.then(() => dtc.wget("https://steubentech.com/CYBIS/CYBIS-src-additions.tap", "opt/tapes", (byteCount, contentLength) => {
  maxProgressLen = utilities.reportProgress(byteCount, contentLength, maxProgressLen);
}))
.then(() => utilities.clearProgress(maxProgressLen))
.then(() => dtc.say("Load CYBIS development tools and PL's archive into catalog of PLATO ..."))
.then(() => dtc.dsd([
  "[UNLOAD,51.",
  "[!"
]))
.then(() => dtc.mount(13, 0, 1, "opt/tapes/cybisdv4nos287.tap"))
.then(() => dtc.dis([
  "ASSIGN,51,TAPE,D=GE,LB=KU.",
  "PFLOAD,UI=33,OP=LR,LO=CEST.",
  "UNLOAD,TAPE.",
  "SUI,32.",
  "PERMIT,NEWSES,PLATO=R,CYBIS=R/NA.",
  "PERMIT,SESBINS,PLATO=R,CYBIS=R/NA."
], "PFLDCYB", 33))
.then(() => dtc.sleep(5000))
.then(() => dtc.say("Get PLATOMF user archive ..."))
.then(() => dtc.wget("https://www.dropbox.com/s/st8opwk0q87g80n/cybis-platomf.tap?dl=1", "opt/tapes", (byteCount, contentLength) => {
  maxProgressLen = utilities.reportProgress(byteCount, contentLength, maxProgressLen);
}))
.then(() => utilities.clearProgress(maxProgressLen))
.then(() => dtc.say("Load archive into catalog of user PLATOMF ..."))
.then(() => dtc.dsd([
  "[UNLOAD,51.",
  "[!"
]))
.then(() => dtc.mount(13, 0, 1, "opt/tapes/cybis-platomf.tap"))
.then(() => dtc.dis([
  "ASSIGN,51,TAPE,D=GE,LB=KU.",
  "PFLOAD,UI=377773,OP=LR,LO=CEST.",
  "UNLOAD,TAPE.",
  "SUI(377773)",
  "PURGE(AUDIT,AUDITX,BACKDIR,COMBUF/NA)",
  "PURGE(DUMPDIR,S0BACKC/NA)",
  "DEFINE(AUDIT,AUDITX,BACKDIR,COMBUF,DUMPDIR)",
  "DEFINE(S0BACKC)"
], "PLATOMF", 377773))
.then(() => dtc.sleep(5000))
.then(() => dtc.say("Get SYS user archive ..."))
.then(() => dtc.wget("https://www.dropbox.com/s/fgvrpoginhk2msb/cybis-sys.tap?dl=1", "opt/tapes", (byteCount, contentLength) => {
  maxProgressLen = utilities.reportProgress(byteCount, contentLength, maxProgressLen);
}))
.then(() => utilities.clearProgress(maxProgressLen))
.then(() => dtc.say("Load archive into catalog of user SYS ..."))
.then(() => dtc.dsd([
  "[UNLOAD,51.",
  "[!"
]))
.then(() => dtc.mount(13, 0, 1, "opt/tapes/cybis-sys.tap"))
.then(() => dtc.dis([
  "ASSIGN,51,TAPE,D=GE,LB=KU.",
  "PFLOAD,UI=31,OP=LR,LO=CEST."
], "SYS", 31))
//The Z is important because the system dump tape
//came from uses tape alternate storage and we don't want the 
//alternate VSN information cataloged, otherwise
//some of these new files might be released with a 
//PFREL.  Z  strips out the alternate storage information when
//restoring files. 
.then(() => dtc.say("Load CYBIS development tools updates into catalog of PLATO ..."))
.then(() => dtc.mount(13, 0, 3, "opt/tapes/CYBIS-src-additions.tap"))
.then(() => dtc.dis([
  "LABEL(TAPE,VSN=CYBSCA,PO=RF)",
  "PFLOAD,UN=PLATO,OP=RLZ,LO=CEST."
],"CYBSCA"))
.then(() => {
  process.exit(0);
})
.catch(err => {
  console.log(err);
  process.exit(1);
});
